function [D,y] = parse_t3_gen(varargin)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    ./t3/tic-tac-toe.data
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/05/14 09:35:25

% Parse
p = inputParser;
addOptional(p, 'save', false);
parse(p, varargin{:});


%% Initialize variables.
filename = './tic-tac-toe.data';
delimiter = ',';

%% Format for each line of text:

% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this code. If
% an error occurs for a different file, try regenerating the code from the
% Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for unimportable
% data, select unimportable cells in a file and regenerate the script.

%% Map to numeric dataset
D = NaN(size(dataArray,1),size(dataArray,2)-1);
for a = 1:size(dataArray,2)-1
    
   ua = unique(dataArray{:,a});
   for u = 1:length(ua)
       ix = strcmp(dataArray{:,a},ua{u});
       D(ix,a) = u;
   end
end
y = D(:,end);
D = D(:,1:end-1);

y = y-1;
y(y==0) = -1;

if p.Results.save
    save('t3', 'D','y');
end

end
